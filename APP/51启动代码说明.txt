/*
[原]51单片机启动代码：STARTUP.A51
2014-1-18阅读499 评论0

通过Keil编译器建立工程时，Keil会提示是否添加STARTUP.A51文件到工程，该文件即为51单片机启动代码。

51单片机复位后马上执行STARTUP.A51文件中的启动代码，根据启动代码中的设置依次执行以下操作：

内部RAM清零
外部RAM清零
清零分页的外部RAM
初始化SMALL内存模型的可重入模拟堆栈及其堆栈指针
初始化LARGE内存模型的可重入模拟堆栈及其堆栈指针
初始化COMPACT内存模型的可重入模拟堆栈及其堆栈指针
初始化8051单片机的硬件堆栈指针
将系统控制权转交给初始化全局变量的代码，如果没有被初始化的全局变量则转交给C程序文件中的main函数。
STARTUP.A51启动文件中定义了一些常量，修改这些常量可以控制单片机复位时执行的动作：
        1、IDATALEN

指定idata区需要清零的字节数。默认值为80H，这是由于8051系列单片机都包含至少128字节内部ram。对于8052系列单片机或者其他系列具有256字节内部ram的，可以将此值改为100H。

2、XDATASTART

指定外部ram需要清零的区域起始地址。

3、XDATALEN

指示xdata区需要清零的字节数，默认值为0.。

4、PDATASTART

指示需要清零的pdata区起始地址。

5、PDATALEN

指示pdata区需要清零的字节数，默认值为0。

6、IBPSTACK

指示是否初始化small内存模型的可重入模拟堆栈指针（?C_IBP）。默认值为0，不初始化该指针。值设为1，编译器将初始化该指针。

7、IBPSTACKTOP

指示small内存模型下可重入堆栈栈顶。默认值为idata区的0xff。该堆栈区是否可用完全由用户负责，编译器并不会帮助检查该地址指定的堆栈区是否与程序使用的ram、硬件堆栈存在冲突。

8、XBPSTACK

指示是否初始化large内存模型的可重入堆栈指针（?C_XBP）。默认值为0，不初始化该指针。值设为1，编译器将初始化该指针。

9、XBPSTACKTOP

指示large内存模型的可重入堆栈栈顶。默认值为xdata区的0xffff。该值指定的区域是否与程序使用的ram、硬件堆栈冲突由用户负责。编译器不做检查。

10、PBPSTACK

指示是否初始化compact内存模型的可重入堆栈栈指针（?C_PBP）。默认值为0，不初始化该指针。值设为1，编译器将初始化该指针。

11、PBPSTACKTOP

指示compact内存模型可重入堆栈栈顶。默认值为pdata区的0xff。该区域选择是否合理完全由用户负责，编译器不做检查。

12、PPAGEENABLE

该值决定是否初始化Port 2的值，以便pdata区寻址。默认值为0，不初始化Port 2。pdata寻址使用Port 2的值作为地址的高字节。

13、PPAGE

指示对Port 2 设置的值，用于pdata寻址时作为地址高字节。例如，pdata区起始位置为xdata区的0x1000，则PPAGEENABLE应该设为1，并且PPAGE应该设为0x10。
*/